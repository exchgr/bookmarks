var BookmarksIndex = React.createClass({
  getInitialState: function() {
    return {
      bookmarks: this.props.bookmarks,
      bookmarkNewFormDisplaying: false
    }
  },

  bookmarkNewForm: function() {
    return $(".rendered-bookmark-new-form");
  },

  toggleBookmarkNewForm: function(e) {
    e.preventDefault();

    this.setState({
      bookmarkNewFormDisplaying: !this.state.bookmarkNewFormDisplaying
    }, function() {
      var titleField = this.bookmarkNewForm().find("#bookmark_title")

      if (this.state.bookmarkNewFormDisplaying) {
        titleField.focus();

        // make "Cancel" hide
        this.bookmarkNewForm().on(
          "click",
          ".cancel",
          this.toggleBookmarkNewForm
        );

        // press esc to hide
        this.bookmarkNewForm().on(
          "keyup",
          function(e) {
            if (e.which == 27) {
              this.toggleBookmarkNewForm(e);
            }
          }.bind(this)
        );
      } else {
        this.bookmarkNewForm().off("click", ".cancel");
        this.bookmarkNewForm().off("keyup");
        titleField.blur(); // prevent typing on hidden field
      }
    });
  },

  bookmarkNewFormDisplayingClass: function() {
    return this.state.bookmarkNewFormDisplaying ? "" : "hidden"
  },

  render: function() {
    return (
      <div className="container">
        <header className="title">
          <h2>Your Bookmarks</h2>

          <a
            href="<%= new_bookmark_path %>"
            className="button button-green right"
            onClick={this.toggleBookmarkNewForm}
          >
            Add bookmark
          </a>
        </header>

        <BookmarksList bookmarks={this.state.bookmarks} />
        <BookmarkNewForm className={this.bookmarkNewFormDisplayingClass() + " modal"} />
        <div className={this.bookmarkNewFormDisplayingClass() + " modal-overlay"} />
      </div>
    );
  }
});
